
---

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    networking.knative.dev/certificate-provider: cert-manager
    serving.knative.dev/controller: "true"
    serving.knative.dev/release: "v0.11.1"
  name: knative-serving-certmanager
rules:
- apiGroups:
  - certmanager.k8s.io
  resources:
  - certificates
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this block and unindented to actually change the configuration.

    # issuerKind is a type of issuer.
    # Please refer to `Supported Issuer types` in https://docs.cert-manager.io/en/latest/reference/issuers.html#supported-issuer-types
    # Currently supported values: acme, ca.
    issuerKind: acme

    # issuerRef is a reference to the issuer for this certificate.
    # IssuerRef should be either `ClusterIssuer` or `Issuer`.
    # Please refer `IssuerRef` in https://github.com/jetstack/cert-manager/blob/master/pkg/apis/certmanager/v1alpha1/types_certificate.go
    # for more details about IssuerRef configuration.
    issuerRef: |
      kind: ClusterIssuer
      name: letsencrypt-issuer

    # solverConfig defines the configuration for the ACME certificate provider.
    # The solverConfig should be either dns01 or http01.
    # Please refer `SolverConfig` in https://github.com/jetstack/cert-manager/blob/master/pkg/apis/certmanager/v1alpha1/types_certificate.go
    # for more details about ACME configuration.
    solverConfig: |
      dns01:
        provider: cloud-dns-provider
kind: ConfigMap
metadata:
  labels:
    networking.knative.dev/certificate-provider: cert-manager
    serving.knative.dev/release: "v0.11.1"
  name: config-certmanager
  namespace: knative-serving

---

---

---

---

---

---

---

---

---

---

---

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    networking.knative.dev/certificate-provider: cert-manager
    serving.knative.dev/release: "v0.11.1"
  name: networking-certmanager
  namespace: knative-serving
spec:
  replicas: 1
  selector:
    matchLabels:
      app: networking-certmanager
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: networking-certmanager
        serving.knative.dev/release: "v0.11.1"
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/serving
        image: gcr.io/knative-releases/knative.dev/serving/cmd/networking/certmanager@sha256:72ace17a7d68a1096f435518e9987bf18f655f67baa4ae66b2e17150789ec2c8
        name: networking-certmanager
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: controller

---

---

---

---
