# This is a fully featured app.yaml. Riser believes in smart defaults. As such most fields are not required.
# Use "riser apps init" to create a new app with a minimal app config file
# Riser is an experimental project and this is subject to change or be out of date at any given time.

# The name of your app. Use "riser apps init" or "riser apps new" to create a new app
name: myapp
# The namespace of your app. A namespace must be setup in Riser prior to creating your app. The "apps" namespace is created by default.
namespace: apps
# The id of your app. This is provided to you by riser.
id: "a75d80f9"
# The docker image, without tag or digest.
image: your/image

# Settings for controlling how your service is exposed to the outside world.
# Note: This will be optional in the future for headless apps
expose:
  # The port your app listens on.
  # Your cluster local URL will be "http://<deploymentName>.<namespace>.svc.cluster.local". Use this for talking between apps in the same cluster.
  # Your external URL will be "https://<deploymentName>.<namespace>.<yourExternalDomain>"
  containerPort: 8000
  # Optional: The protocol (http|http2) (default: http)
  # Note: External traffic is always TLS. HTTP will auto redirect to HTTPS.
  # Note: Traffic will attempt to auto-upgrade to http2. Specifying "http2" adds the "h2c" token, required for protocols like grpc
  protocol: http

# --- Everything below this line is optional --- #

# Optional. Configures the autoscaler
autoscale:
  # Optional. The default is 0, but effectively may be different per stage depending on cluster level autoscaler settings
  # and/or resource quotas (default: empty)
  # Note: A minimum means that if your app is not active there will be zero scheduled pods. This means that a "cold" request
  # to your app will take a bit longer depending on how quickly your app can startup.
  min: 0
  # Optional. Must be greater than autoscale.min. The maximum effective value may be different per stage depending on
  # cluster level autoscaler settings and/or resource quotas (default: empty)
  max: 1

# Optional. Environment variables specified in the form of "key: value". Do not put secrets here.
environment:
  DEBUG: true
  DEFAULT_CACHE_TIMEOUT: "1m"
  # ETC...

# Optional. The health check section allows you to configure a health check endpoint for your app.
healthcheck:
  # Optional. The path to your health check endpoint
  path: "/health"
  # Optional. The port serving your health check endpoint. This only needs to be set if your healthcheck endpoint listens on a different port than your service.
  # Defaults to expose.containerPort
  port: 8000

# Optional. Defaults to Kubernetes cluster/namespace defaults.
resources:
  # Optional. This sets the maximum number of CPU cores that the app can utilize. Defaults to Kubernetes cluster/namespace defaults.
  cpuCores: 1
  # Optional. This sets the maximum amount of memory that an app can utilize. If this limit is reached the app will receive an OOM signal. Defaults to Kubernetes cluster/namespace defaults.
  memoryMB: 128

# Optional. Stage specific settings. Most settings can be overridden except for "name" and "id".
stages:
  # Example: for a stage named "prod" that wishes to set the environment variable "DEBUG" to "false":
  prod:
    environment:
      DEBUG: false




